# Byte-compiled / optimized / DLL filesn__pycache__/n*.py[cod]n*$py.classnn# C extensionsn*.sonn# Distribution / packagingn.Pythonnbuild/ndevelop-eggs/ndist/ndownloads/neggs/n.eggs/nlib/nlib64/nparts/nsdist/nvar/nwheels/nshare/python-wheels/n*.egg-info/n.installed.cfgn*.eggnMANIFESTnn# PyInstallern#  Usually these files are written by a python script from a templaten#  before PyInstaller builds the exe, so as to inject date/other infos into it.n*.manifestn*.specnn# Installer logsnpip-log.txtnpip-delete-this-directory.txtnn# Unit test / coverage reportsnhtmlcov/n.tox/n.nox/n.coveragen.coverage.*n.cachennosetests.xmlncoverage.xmln*.covern*.py,covern.hypothesis/n.pytest_cache/ncover/nn# Translationsn*.mon*.potnn# Django stuff:n*.lognlocal_settings.pyndb.sqlite3ndb.sqlite3-journalnn# Flask stuff:ninstance/n.webassets-cachenn# Scrapy stuff:n.scrapynn# Sphinx documentationndocs/_build/nn# PyBuildern.pybuilder/ntarget/nn# Jupyter Notebookn.ipynb_checkpointsnn# IPythonnprofile_default/nipython_config.pynn# pyenvn#   For a library or package, you might want to ignore these files since the code isn#   intended to run in multiple environments; otherwise, check them in:n# .python-versionnn# pipenvn#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.n#   However, in case of collaboration, if having platform-specific dependencies or dependenciesn#   having no cross-platform support, pipenv may install dependencies that don't work, or notn#   install all needed dependencies.n#Pipfile.locknn# poetryn#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.n#   This is especially recommended for binary packages to ensure reproducibility, and is moren#   commonly ignored for libraries.n#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-controln#poetry.locknn# pdmn#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.n#pdm.lockn#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include itn#   in version control.n#   https://pdm.fming.dev/#use-with-iden.pdm.tomlnn# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdmn__pypackages__/nn# Celery stuffncelerybeat-schedulencelerybeat.pidnn# SageMath parsed filesn*.sage.pynn# Environmentsn.envn.venvnenv/nvenv/nENV/nenv.bak/nvenv.bak/nn# Spyder project settingsn.spyderprojectn.spyderworkspacenn# Rope project settingsn.ropeprojectnn# mkdocs documentationn/sitenn# mypyn.mypy_cache/n.dmypy.jsonndmypy.jsonnn# Pyre type checkern.pyre/nn# pytype static type analyzern.pytype/nn# Cython debug symbolsncython_debug/nn# PyCharmn#  JetBrains specific template is maintained in a separate JetBrains.gitignore that cann#  be added to the global gitignore or merged into this project gitignore.  For a PyCharmn#  project, uncomment the following line:n#.idea/nn# macOSn.DS_Storenn# WindowsnThumbs.dbnn# IDEn.vscode/n.idea/n*.swpn*.swon*~nn# Logsn*.lognn# Temporary filesn*.tmpn*.tempnbackup/
